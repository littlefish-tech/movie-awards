{"version":3,"sources":["components/InputSearch.tsx","components/NominateBtn.tsx","components/RemoveBtn.tsx","components/NominateList.tsx","components/Modal.tsx","components/Movies.tsx","asset/images/top.png","components/ScrollToTop.tsx","components/Title.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputSearch","props","className","type","name","onChange","icon","faSearch","onClick","aria-hidden","NominateBtn","disabled","isClicked","RemoveBtn","removeMovie","NominateList","useState","saveMovies","setSaveMovie","useEffect","m","localStorage","getItem","movies","JSON","parse","saveMov","count","length","map","movie","i","src","Poster","Title","Year","imdbID","Modal","Movies","nominatedMovies","sId","savedMovies","setSavedMovies","strId","setStrId","setCount","showModal","setShowModal","id","a","filter","movieObj","indexOf","saved","setItem","stringify","movieInput","showName","style","background","nomineeMovie","newList","item","itemId","newIdStr","ScrollToTop","visible","setVisible","toggleVisibility","window","pageYOffset","addEventListener","scrollTo","top","behavior","alt","OMDbAPI","process","App","setMovies","setMovieInput","setShowName","trim","fetch","then","response","json","data","movieArr","Search","console","error","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aa586fd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../style/inputSearch.css\";\n\nexport default function InputSearch(props: { onChange: any; onClick: any }) {\n  return (\n    <div>\n      <form>\n        <div className=\"searchForm\">\n          <input\n            type=\"text\"\n            name=\"inputMovie\"\n            className=\"movieName\"\n            onChange={props.onChange}\n          />\n          <FontAwesomeIcon\n            icon={faSearch}\n            className=\"searchIcon\"\n            onClick={props.onClick}\n            aria-hidden=\"true\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../style/nominateBtn.css\";\n\nexport default function NominateBtn(props: {\n  onClick: any;\n  isClicked: boolean;\n}) {\n  return (\n    <button\n      className=\"nominateBtn\"\n      onClick={props.onClick}\n      disabled={props.isClicked}\n    >\n      Nominate\n    </button>\n  );\n}\n","import React from \"react\";\nimport \"../style/movies.css\";\n\nexport default function RemoveBtn(props: { removeMovie: () => void }) {\n  return (\n    <button className=\"rBtn\" onClick={props.removeMovie}>\n      Remove\n    </button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { movie } from \"./Movies\";\nimport RemoveBtn from \"./RemoveBtn\";\nimport \"../style/nominateList.css\";\nimport \"../style/movies.css\";\n\nexport default function NominateList(props: {\n  count: number;\n  removeMovie: any;\n}) {\n  const [saveMovies, setSaveMovie] = useState<[]>([]);\n  useEffect(() => {\n    saveMov();\n  }, [props.count]);\n  function saveMov() {\n    let m = localStorage.getItem(\"movie\" || \"[]\");\n    let movies = JSON.parse(m || \"[]\");\n    setSaveMovie(movies);\n  }\n\n  return (\n    <div className=\"mList\">\n      <div className=\"listText\">Nominations</div>\n      <div>\n        {saveMovies.length > 0 &&\n          saveMovies.map((movie: movie, i: number) => (\n            <div key={i} className=\"nominateMovie\">\n              <img src={movie.Poster} />\n              <div className=\"nMovieContent\">\n                <div>Title: {movie.Title}</div>\n                <div>Year: {movie.Year}</div>\n                <RemoveBtn\n                  removeMovie={() => props.removeMovie(movie.imdbID)}\n                />\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../style/modal.css\";\n\nexport default function Modal(props: { onClick: () => void }) {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <span className=\"close\" onClick={props.onClick}>\n          &times;\n        </span>\n        <p>You can Nominate max 5 movies</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport NominateBtn from \"./NominateBtn\";\nimport NominateList from \"./NominateList\";\nimport Modal from \"./Modal\";\n\nimport \"../style/nominateList.css\";\nimport \"../style/movies.css\";\n\nexport interface movie {\n  Title: string;\n  Year: string;\n  Poster: string;\n  imdbID: string;\n}\n\nexport default function Movies(props: {\n  movies: movie[];\n  movieInput: string;\n  showName: string;\n}) {\n  let nominatedMovies: movie[] = JSON.parse(\n    localStorage.getItem(\"movie\") || \"[]\"\n  );\n  let sId: string[] = JSON.parse(localStorage.getItem(\"id\") || \"[]\");\n\n  const [savedMovies, setSavedMovies] = useState<movie[]>(nominatedMovies);\n  const [strId, setStrId] = useState<string[]>(sId);\n  const [count, setCount] = useState<number>(0);\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"movie\", JSON.stringify(savedMovies));\n    localStorage.setItem(\"id\", JSON.stringify(strId));\n    setCount(count + 1);\n  }, [savedMovies]);\n\n  async function nomineeMovie(id: string) {\n    let m: movie[] = props.movies.filter(\n      (movieObj: movie) => movieObj.imdbID === id\n    );\n    if (savedMovies.length === 5) {\n      setShowModal(true);\n    }\n    if (strId.indexOf(id) === -1 && savedMovies.length < 5) {\n      let saved = [...savedMovies, m[0]];\n      setSavedMovies(saved);\n      setStrId([...strId, id]);\n    }\n  }\n\n  function removeMovie(id: string) {\n    let newList = savedMovies.filter((item: movie) => item.imdbID !== id);\n    strId.filter((itemId: string) => itemId !== id);\n    setSavedMovies(newList);\n    let newIdStr = strId.filter((itemId: string) => itemId !== id);\n    setStrId(newIdStr);\n  }\n\n  return (\n    <div className=\"contentDisplay\">\n      {showModal && <Modal onClick={() => setShowModal(false)} />}\n      <div className=\"movieListContent\">\n        {props.movieInput && props.showName && (\n          <div className=\"listText\">Results for \"{props.showName}\"</div>\n        )}\n        <div className=\"movieList\">\n          {props.movies ? (\n            props.movies.map((movie: movie, i) => (\n              <div\n                className=\"movie\"\n                key={i}\n                style={{\n                  background: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),url(${movie.Poster})`,\n                }}\n              >\n                {/* <img src={movie.Poster} /> */}\n                <div className=\"titleStyle\">{movie.Title}</div>\n                <div>Year: {movie.Year}</div>\n                <NominateBtn\n                  onClick={() => nomineeMovie(movie.imdbID)}\n                  isClicked={strId.indexOf(movie.imdbID) !== -1}\n                />\n              </div>\n            ))\n          ) : (\n            <div>No result display</div>\n          )}\n        </div>\n      </div>\n      <div className=\"nominateList\">\n        <NominateList count={count} removeMovie={removeMovie} />\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/top.195e160f.png\";","import React, { useEffect, useState } from \"react\";\nimport \"../style/scrollToTop.css\";\nimport top from \"../asset/images/top.png\";\n\nexport default function ScrollToTop() {\n  // scroll to top idea give credit to https://www.coderomeos.org/scroll-to-top-of-the-page-a-simple-react-component\n  const [visible, setVisible] = useState<boolean>(false);\n\n  function toggleVisibility() {\n    if (window.pageYOffset > 300) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  }\n  function scrollToTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", toggleVisibility);\n  }, []);\n\n  return (\n    <div className=\"scrollToTop\">\n      {visible && (\n        <div onClick={scrollToTop}>\n          <img src={top} alt=\"Go to top\" />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../style/title.css\";\n\nexport default function Title() {\n  return <div className=\"title\">NOMINATE A MOVIE</div>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport InputSearch from \"./components/InputSearch\";\nimport Movies, { movie } from \"./components/Movies\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Title from \"./components/Title\";\nimport \"./App.css\";\n\nconst OMDbAPI = process.env.REACT_APP_OMDb_API_KEY;\n\nfunction App() {\n  const [movies, setMovies] = useState<movie[]>([]);\n  const [movieInput, setMovieInput] = useState<string>(\"\");\n  const [showName, setShowName] = useState<string>(\"\");\n\n  async function searchMovies() {\n    if (movieInput.trim() === \"\") {\n      return;\n    }\n    try {\n      await fetch(`https://www.omdbapi.com/?apikey=${OMDbAPI}&s=${movieInput}`)\n        .then((response) => response.json())\n        .then((data) => {\n          let movieArr = data.Search;\n          setMovies(movieArr);\n        });\n      // setShowResults(true);\n      setShowName(movieInput);\n    } catch (error) {\n      console.error(\"Error\", error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <div>\n        <InputSearch\n          onChange={(e: any) => setMovieInput(e.target.value)}\n          onClick={searchMovies}\n        />\n      </div>\n      <div>\n        <Movies\n          movies={movies}\n          movieInput={movieInput}\n          // showResults={showResults}\n          showName={showName}\n        />\n        {/* <NominateList /> */}\n      </div>\n      <ScrollToTop />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}